public class Solution {
	public static int minSubsetSumDifference(int[] arr, int n) {
		// Write your code here.
        int target=0;
        for(int i=0;i<n;i++){
            target+=arr[i];
        }
        boolean dp[][]=new boolean[n][target+1];
        for(int i=0;i<n;i++){
            dp[i][0]=true;
        }
        if(arr[0]<=target){
            dp[0][arr[0]]=true;
        }
        
        for(int i=1;i<n;i++){
            for(int j=1;j<=target;j++){
                boolean notTaken=dp[i-1][j];
                boolean taken=false;
                if(arr[i]<=j){
                    taken=dp[i-1][j-arr[i]];
                }
                dp[i][j]=taken || notTaken;
            }
        }
        int ans=1000000009;
        for(int i=0;i<=target;i++){
            if(dp[n-1][i]==true){
                int s1=i;
                int s2=target-i;
                ans=Math.min(ans,Math.abs(s1-s2));
            }
        }
        return ans;
	}

}
